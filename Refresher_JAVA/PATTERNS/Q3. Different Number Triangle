Problem Description
Take an integer N as input, print the corresponding Full Numeric Pyramid pattern for N.

For example if N = 5 then pattern will be like:

0 0 0 0 5 0 0 0 0 
0 0 0 4 8 12 0 0 0 
0 0 3 6 9 12 15 0 0
0 2 4 6 8 10 12 14 0
1 2 3 4 5 6 7 8 9 
NOTE: There should be exactly one extra space after each number for each row.


Problem Constraints
2 <= N <= 100



Input Format
First and only line of input contains a single integer N.



Output Format
Output the Full Pyramid pattern corresponding to the given N.

NOTE:

There is no extra space before the first integer of any row.
There is an extra space after the last integer of any row.
All the integers in any row are space separated.


Example Input
Input 1:

2
Input 2:

3


Example Output
Output 1:

0 2 0
1 2 3
Output 2:

0 0 3 0 0
0 2 4 6 0
1 2 3 4 5


Example Explanation
 Print the pattern as described.

----------------------------------------------------------------------------------------------------------------------------------------------------------------

N=3

row zero non zero digits   
1    4        1
2    2        3
3    0        5

this code was copy pasted

import java.util.*;

class Main {

    public static void main(String args[]) {
        Scanner scn = new Scanner(System.in);
        
        int n = scn.nextInt();
        
        // Loop for N rows
        for (int i = 1; i <= n; i++)
    	{
    	    // Print leading 0s
    		int spaces = n - i;
    		for (int j = 1; j <= spaces; j++){
    			 System.out.print("0 ");
    		}
    		// Print non-zero number series
    		int lim = 2 * i - 1;
            int cnt = 1;
            for (int j = 1; j <= lim; j++)
    		{
    		    System.out.print((n-i+1)*cnt + " ");
                cnt++;
    		}
    		// Print trailing 0s
    		for (int j = 1; j <= spaces; j++){
    			System.out.print("0 ");
    		}
        	System.out.println();
    	}
    }

}
