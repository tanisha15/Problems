Given N array elements, at every step remove an array element.
Cost to remove an element: sum of all elements present in the array.
Find the minimum cost to remove the elements
Note: first calculate the cost and then remove the element

For e.g:

a[3] [2 1 4]
remove 2: 7 (2+1+4)
remove 1: 5 (1+4)
remove 4: 4
--------------------------
total:     16

remove 1: 7 (2+1+4)
remove 2: 6
remove 4: 4
----------------------------
total: 17

remove 4: 7
remove 2: 3
remove 1: 1
------------------------
total:    11

So 11 is the minimum one

So you can even observe that we are removing in descending order, then we get the minimum value

Deleting element by element in decreasing order to get the minimum cost

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

a[4] = {a,b,c,d}

remove a: a+b+c+d
remove b: b+c+d
remove c: c+d
remove d: d

Total cost: a+2b+3c+4d

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Time complexity: O(NlogN+N)
Space complexity: O(1)

Pseudo code:

int calculatecost (a[], n){
sort desc(a)
ans=0
for(i=0;i<n;i++){
ans+=(i+1)*a[i]
}
return a

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++












